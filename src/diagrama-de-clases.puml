@startuml
Torneo -- Equipo
Torneo -- Fecha
Fecha -- PartidoFutbol
PartidoFutbol -- Equipo
Equipo --- Jugador
Equipo --- Tecnico
class Torneo {
    - nombre : String
    - fechas : HashMap<Integer, Fecha> //la clave es el numero de fecha
    - tabla : ArrayList<Equipo> //ordenado por puntos
    - goleadores : HashMap<String, Jugador>
    + agregarEquipo(equipo : Equipo) : void
    - devolverTabla() : String
}
class Fecha {
    - numeroFecha : int
    - partidos : ArrayList<PartidoFutbol>
    + agregarPartido(local : Equipo, visitante : Equipo) : void
    + sacarPartido(local : Equipo, visitante : Equipo) : void
    - devolverIndicePartido(local : Equipo, visitante : Equipo) : int
}
class PartidoFutbol {
    - local : Equipo
    - visitante : Equipo
    - golesL : int
    - golesV : int
    + actualizarResultado(golesLAux : int, golesVAux : int) : void
    + calcularPuntos() : void
}
class Equipo {
    - idEquipo : int
    - nombre : String
    - tecnico : Tecnico
    - jugadores : ArrayList<Jugador>
    - puntos : int
    - partidosJugados : int
    - partidosGanados : int
    - partidosEmpatados : int
    - partidosPerdidos : int
    - diferenciaGoles : int
    - golesAFavor : int
    - golesEnContra : int
    + ganarPartido(golesAFavorAux : int, golesEnContraAux : int) : void
    + empatarPartido(golesAFavorAux : int, golesEnContraAux : int) : void
    + perderPartido(golesAFavorAux : int, golesEnContraAux : int) : void
    + actualizarGoles(golesAFavorAux : int, golesEnContraAux : int) : void
}
abstract class Persona {
    - nombre : String
    - edad : int
}
class Jugador extends Persona {
    - posicion : String
    - numero : int
}
class Tecnico extends Persona {
    - formacionFavorita : String
}
@enduml
